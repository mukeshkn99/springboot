package in.ashokit.service;

import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Random;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import in.ashokit.binding.Loginform;
import in.ashokit.binding.Regform;
import in.ashokit.binding.Unlockacc;
import in.ashokit.entities.CityMasterEntity;
import in.ashokit.entities.CountryMasterEntity;
import in.ashokit.entities.StateMasterEntity;
import in.ashokit.entities.UserDtlsEntity;
import in.ashokit.repository.CityRepository;
import in.ashokit.repository.CountryRepository;
import in.ashokit.repository.StateRepository;
import in.ashokit.repository.UserRepository;
import in.ashokit.utils.EmailUtils;

@Service
public class UserManageServiceImpl implements UserManageService{
	private Logger logger=LoggerFactory.getLogger(UserManageServiceImpl.class);

	@Autowired
	private UserRepository userrepo;
	
    
	
	@Override
	public String loginform(Loginform login) {
           UserDtlsEntity entity=userrepo.findByEmailAndPassword(login.getEmail(), login.getPassword());
		   
		   if(entity!=null) {
			   return"Invalid Credentials";
		   }
		 
           return "success";
		
	}
	
	@Override
	public String signup(Regform reg) {
		UserDtlsEntity entity=new UserDtlsEntity();
		BeanUtils.copyProperties(reg, entity);
		
		entity.setAccstatus("LOCKED");
		
		entity.setPassword(generateRandom()); 
		
		UserDtlsEntity savedentity=userrepo.save(entity);
		
		String email=reg.getEmail();
		String subject="User-Registered";
		String filename="UNLOCK-ACCOUNT-EMAIL-BODY.txt";
		String body=readmailbody(filename,entity);
		
		boolean isSent=emailutils.sendmail(email, subject, body);
		if(savedentity.getUserid()!=null && isSent) {
			return "SUCCESS";
		}
		return "FAIL";
	}

	
			}
	}
	


